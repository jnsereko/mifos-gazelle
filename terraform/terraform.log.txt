joshua [ ~ ]$ terraform init
Initializing the backend...
Initializing provider plugins...
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Using previously-installed hashicorp/azurerm v3.117.1

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

###################################################################
joshua [ ~ ]$ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.main will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = true
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-simple"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "rg-simple-vm"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDsT99DzYP4y8zy2Wn4C1DRa4At77OMvqrhi5YsOTqdubgNtWJnp3xoqlAKyfNhwr4JLTM0kMoZWa7aVTBj6MouCvttJGHeBiHyCY66Uq/SAmCV5ceuDluDlOZk5/pufkBsKjV80arDgInLK6dpz4sARvElJElYJo7HFjT0x7XNFmTZ59EnJDDxbJl3wu6ERfID0rnC3Z3C7o4XkcetLerPagQKIvGPoaZL3GhoBAcL0tgxPoBzvntXvJdDJqrhvc79FInE0EkDPTSNeEZl1YiPPboG6hYPWmndmY2O0hi9rX+6kwvIxzurSyRSD65vYJieM/O5wkMbSjiFCKbrg04Me8j/BnCAooj9dU2NJrLOBQuYXtrDNoMLJa100mLfcKYf6hLCtQ7B1Pb3FdYFTVz+Kjvoa4EL+SxEx9trmhRbBZAdlsdqk9Teb/6yL3W3vc3UPXk7XgtClwLjvc7WDH0Nh+uRJDr2ejqRiqJoypvgIj2wjtV1wbsaj91qXKBR8lBGE+x96x/TT7xbtY5swFTFz5LXh4kSGlHn2mBJaRmB3XHLRLGpUQ65joqO/shc4DFTI4lE+UEXYRbCgFIGzG6UiQ3yRbN6wbqV2nrr8Ka356kxT0Z2CE7HEciCrCIXnOrfXKu1if8UoFS4VJ/2+2CjyXKCUP9fR0fy27GdgKpNeQ== joshua@SandboxHost-638882387803402877
            EOT
          + username   = "adminuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-focal"
          + publisher = "Canonical"
          + sku       = "20_04-lts-gen2"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_network_interface.main will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "nic-simple-vm"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "rg-simple-vm"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.main will be created
  + resource "azurerm_network_interface_security_group_association" "main" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.main will be created
  + resource "azurerm_network_security_group" "main" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "nsg-simple-vm"
      + resource_group_name = "rg-simple-vm"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
        ]
    }

  # azurerm_public_ip.main will be created
  + resource "azurerm_public_ip" "main" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "pip-simple-vm"
      + resource_group_name     = "rg-simple-vm"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.main will be created
  + resource "azurerm_resource_group" "main" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "rg-simple-vm"
    }

  # azurerm_subnet.internal will be created
  + resource "azurerm_subnet" "internal" {
      + address_prefixes                               = [
          + "10.0.2.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "internal"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "rg-simple-vm"
      + virtual_network_name                           = "vnet-simple"
    }

  # azurerm_virtual_network.main will be created
  + resource "azurerm_virtual_network" "main" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "vnet-simple"
      + resource_group_name = "rg-simple-vm"
      + subnet              = (known after apply)
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + public_ip_address = (known after apply)

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.



#################################################################################
joshua [ ~ ]$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.main will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = true
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-simple"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "rg-simple-vm"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDsT99DzYP4y8zy2Wn4C1DRa4At77OMvqrhi5YsOTqdubgNtWJnp3xoqlAKyfNhwr4JLTM0kMoZWa7aVTBj6MouCvttJGHeBiHyCY66Uq/SAmCV5ceuDluDlOZk5/pufkBsKjV80arDgInLK6dpz4sARvElJElYJo7HFjT0x7XNFmTZ59EnJDDxbJl3wu6ERfID0rnC3Z3C7o4XkcetLerPagQKIvGPoaZL3GhoBAcL0tgxPoBzvntXvJdDJqrhvc79FInE0EkDPTSNeEZl1YiPPboG6hYPWmndmY2O0hi9rX+6kwvIxzurSyRSD65vYJieM/O5wkMbSjiFCKbrg04Me8j/BnCAooj9dU2NJrLOBQuYXtrDNoMLJa100mLfcKYf6hLCtQ7B1Pb3FdYFTVz+Kjvoa4EL+SxEx9trmhRbBZAdlsdqk9Teb/6yL3W3vc3UPXk7XgtClwLjvc7WDH0Nh+uRJDr2ejqRiqJoypvgIj2wjtV1wbsaj91qXKBR8lBGE+x96x/TT7xbtY5swFTFz5LXh4kSGlHn2mBJaRmB3XHLRLGpUQ65joqO/shc4DFTI4lE+UEXYRbCgFIGzG6UiQ3yRbN6wbqV2nrr8Ka356kxT0Z2CE7HEciCrCIXnOrfXKu1if8UoFS4VJ/2+2CjyXKCUP9fR0fy27GdgKpNeQ== joshua@SandboxHost-638882387803402877
            EOT
          + username   = "adminuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-focal"
          + publisher = "Canonical"
          + sku       = "20_04-lts-gen2"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_network_interface.main will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "nic-simple-vm"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "rg-simple-vm"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.main will be created
  + resource "azurerm_network_interface_security_group_association" "main" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.main will be created
  + resource "azurerm_network_security_group" "main" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "nsg-simple-vm"
      + resource_group_name = "rg-simple-vm"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
        ]
    }

  # azurerm_public_ip.main will be created
  + resource "azurerm_public_ip" "main" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "pip-simple-vm"
      + resource_group_name     = "rg-simple-vm"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.main will be created
  + resource "azurerm_resource_group" "main" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "rg-simple-vm"
    }

  # azurerm_subnet.internal will be created
  + resource "azurerm_subnet" "internal" {
      + address_prefixes                               = [
          + "10.0.2.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "internal"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "rg-simple-vm"
      + virtual_network_name                           = "vnet-simple"
    }

  # azurerm_virtual_network.main will be created
  + resource "azurerm_virtual_network" "main" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "vnet-simple"
      + resource_group_name = "rg-simple-vm"
      + subnet              = (known after apply)
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + public_ip_address = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.main: Creating...
azurerm_resource_group.main: Still creating... [10s elapsed]
azurerm_resource_group.main: Creation complete after 12s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm]
azurerm_public_ip.main: Creating...
azurerm_network_security_group.main: Creating...
azurerm_virtual_network.main: Creating...
azurerm_network_security_group.main: Creation complete after 4s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Network/networkSecurityGroups/nsg-simple-vm]
azurerm_public_ip.main: Creation complete after 4s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Network/publicIPAddresses/pip-simple-vm]
azurerm_virtual_network.main: Creation complete after 6s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Network/virtualNetworks/vnet-simple]
azurerm_subnet.internal: Creating...
azurerm_subnet.internal: Creation complete after 6s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Network/virtualNetworks/vnet-simple/subnets/internal]
azurerm_network_interface.main: Creating...
azurerm_network_interface.main: Still creating... [10s elapsed]
azurerm_network_interface.main: Creation complete after 12s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Network/networkInterfaces/nic-simple-vm]
azurerm_network_interface_security_group_association.main: Creating...
azurerm_linux_virtual_machine.main: Creating...
azurerm_network_interface_security_group_association.main: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.main: Still creating... [10s elapsed]
azurerm_network_interface_security_group_association.main: Creation complete after 12s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Network/networkInterfaces/nic-simple-vm|/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Network/networkSecurityGroups/nsg-simple-vm]
azurerm_linux_virtual_machine.main: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.main: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.main: Still creating... [40s elapsed]
azurerm_linux_virtual_machine.main: Creation complete after 50s [id=/subscriptions/beef4b88-7c19-4987-8e02-3b8f53777725/resourceGroups/rg-simple-vm/providers/Microsoft.Compute/virtualMachines/vm-simple]

Apply complete! Resources: 8 added, 0 changed, 0 destroyed.

Outputs:

public_ip_address = "74.235.179.16"