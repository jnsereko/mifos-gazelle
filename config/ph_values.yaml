


ph-ee-engine:
  global: 
    imagePullPolicy: IfNotPresent
    tenants: "greenbank,bluebank"
    DFSPIDS: "greenbank,bluebank" 



  elasticsearch:
    esJavaOpts: "-Xms512m -Xmx512m"
    resources:
      requests:
        cpu: "100m"
        memory: "128k"
      limits:
        cpu: "1000m"
        memory: "1000M"
    ingress:
      enabled: true 
      className: nginx
      pathtype: ImplementationSpecific
      hosts:
        - host: elastic-phee.mifos.gazelle.test
          paths:
            - path: /

  kibana:
    elasticsearchHosts: http://ph-ee-elasticsearch:9200
    ingress:
      enabled: true 
      className: nginx
      pathtype: ImplementationSpecific
      hosts:
        - host: kibana-phee.mifos.gazelle.test
          paths:
            - path: /


  # Operations app
  operations_app:
    image: docker.io/openmf/ph-ee-operations-app:v1.17.1
    ingress:
      enabled: false
      className: nginx
      # annotations:
      #   kubernetes.io/ingress.class: nginx
      #   nginx.ingress.kubernetes.io/cors-allow-headers: 'platform-tenantid'
      #   nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
      #   nginx.ingress.kubernetes.io/cors-allow-origin: '*'
      #   nginx.ingress.kubernetes.io/enable-cors: "true"
      # # tls:
      # #   - secretName: sandbox-secret
      # hosts:
      #   - host: ops-bk.mifos.gazelle.test
      #     paths:
      #     - path: "/"
      #       backend:
      #         service:
      #           name: "ph-ee-operations-app"
      #           port:
      #             number: 80

  operations_web:
    enabled: true
    #image: docker.io/openmf/ph-ee-operations-web:v1.20.0
    # note as at Oct 2024 latest is Victor's fix for oneacre issue is in master branch 
    #image: docker.io/openmf/ph-ee-operations-web:master
    image: docker.io/openmf/ph-ee-operations-web:dev1 
    backend:
      PH_OPS_BACKEND_SERVER_URL: https://ops.mifos.gazelle.test/api/v1
      PH_VOU_BACKEND_SERVER_URL: https://ops.mifos.gazelle.test/api/v1
      PH_ACT_BACKEND_SERVER_URL: https://ops.mifos.gazelle.test
      PH_OPS_BULK_CONNECTOR_URL: https://bulk-connector.mifos.gazelle.test
      PH_OPS_SIGNATURE_URL: https://ops.mifos.gazelle.test/api/v1/util/x-signature
      PH_PLATFORM_TENANT_ID: greenbank
      PH_PLATFORM_TENANT_IDS: "greenbank,bluebank" 
    auth:
      PH_AUTH_ENABLED: false
      PH_OAUTH_ENABLED: false
      PH_OAUTH_TYPE: keycloak
      PH_OAUTH_SERVER_URL: http://keycloak.mifos.gazelle.test/auth
      PH_OAUTH_REALM: fred
      PH_OAUTH_CLIENT_ID: fred2
      PH_OAUTH_CLIENT_SECRET: Y2xpZW50Og==
      PH_OAUTH_BASIC_AUTH: true
      PH_OAUTH_BASIC_AUTH_TOKEN: Y2xpZW50Og==
      PH_DEFAULT_LANGUAGE: en
      PH_SUPPORTED_LANGUAGES: en,fr,es    
    #hostname: "operations-web"
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/cors-allow-headers: content-type,platform-tenantid,privatekey,x-correlationid,x-correlation-id,purpose,type,x-callback-url,x-program-id,x-registering-institution-id,x-signature
        nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
        nginx.ingress.kubernetes.io/cors-allow-origin: '*'
        nginx.ingress.kubernetes.io/enable-cors: "true"
      enabled: true 
      tls:
        - secretName: sandbox-secret
      hosts:
        - host: ops.mifos.gazelle.test       
          paths: 
          - path: "/"
            backend:
              service:
                name: "ph-ee-operations-web"
                port:
                  number: 80    
          - path: "/paymenthub"
            backend:
              service:
                name: "ph-ee-operations-web"
                port:
                  number: 80
          - path: "/api/v1"
            backend:
              service:
                name: "ph-ee-operations-app"
                port:
                  number: 80
          - path: "/oauth"
            backend:
              service:
                name: "ph-ee-operations-app"
                port:
                  number: 80
          # - path: "/batchtransactions"
          #   backend:
          #     service:
          #       name: "ph-ee-connector-bulk"
          #       port:
          #         number: 8443
          # - path: "/bulk"
          #   backend:
          #     service:
          #       name: "ph-ee-connector-bulk"
          #       port:
          #         number: 8443
          - path: /benficiary
            backend:
              service:
                name: ph-ee-identity-account-mapper
                port:
                  number: 80

  camunda-platform:
    enabled: true

    operate: 
      enabled: false
      ingress:
        ## @param operate.ingress.enabled if true, an ingress resource is deployed with the Operate deployment. Only useful if an ingress controller is available, like nginx. Warning, separated ingress is deprecated and will be removed in the next release, please use global.ingress instead.
        enabled: true 
        ## @param operate.ingress.className defines the class or configuration of ingress which should be used by the controller
        className: nginx
        annotations:
          ingress.kubernetes.io/rewrite-target: '/'
          nginx.ingress.kubernetes.io/ssl-redirect: 'false'
          nginx.ingress.kubernetes.io/proxy-buffer-size: '128k'
          nginx.ingress.kubernetes.io/proxy-buffering: 'on'
        path: /
        pathType: Prefix
        host: zeebe-operate.mifos.gazelle.test
        tls:
          enabled: false
  
    zeebe-gateway:
      ingress:
        enabled: true 
        className: nginx
        host: zeebe-gateway.mifos.gazelle.test 

    zeebe:   
    # removes dependency of https://fynarfin.io for exporter jarfile   
    # TODO move this to mifos artifactory !!!
      extraInitContainers: 
        - name: init-ph-ee-kafka-exporter
          image: busybox:1.28
          command: ['/bin/sh', '-c']
          #args: ['wget -O /exporters/ph-ee-kafka-exporter.jar "http://10.0.0.4:8000/exporter-1.0.0-SNAPSHOT.jar"; ls -al /exporters/']
          args: ['wget -O /exporters/ph-ee-kafka-exporter.jar "https://paymenthub-ee-dev.s3.us-east-2.amazonaws.com/jars/exporter-1.0.0-SNAPSHOT.jar"; ls -al /exporters/']
          volumeMounts:
            - name: exporters
              mountPath: /exporters/
      # volumeClaimTemplate:
      #   storageClassName: "local-path"
    
  # Zeebe operations
  zeebe_ops:
    ingress:
      enabled: true
      className: nginx
    # note limts and requests should be in the ph-ee-engine values.yaml 
    # so safe to take out now  
    limits:
      memory: "1000M"
      cpu: "1000m"
    requests:
      memory: "128k"
      cpu: "50m"



  # Vouchers
  vouchers:
    enabled: true
    ingress:
      enabled: true
      className: nginx
  
  # # Kibana
  # kibana:
  #   ingress:
  #     enabled: true
  #   hosts:
  #     - host: kibana.mifos.gazelle.test

  # Notifications
  notifications:
    # enabled: true
    # imagePullPolicy: "Always"
    # SPRING_PROFILES_ACTIVE: "bb"
    # LOGGING_LEVEL_ROOT: "INFO"
    # MESSAGEGATEWAYCONFIG_HOST: "message-gateway-1"
    # NOTIFICATION_LOCAL_HOST: "ph-ee-connector-notifications"
    # NOTIFICATION_SUCCESS_ENABLED: "false"
    # NOTIFICATION_FAILURE_ENABLED: "true"   
    hostname: "notifications.mifos.gazelle.test"
    includeResources: false
    ingress:
      enabled: true
      className: nginx
      # annotations: 
      #   kubernetes.io/ingress.class: nginx  
      # tls:
      #   - secretName: sandbox-secret
      # hosts:
      #   - host: notifications.mifos.gazelle.test         
      #     paths: 
      #     - path: "/"
      #       backend:
      #         service:
      #           name: "ph-ee-connector-notifications"
      #           port:
      #             number: 80  
    deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"

  # PH-EE Connector Mojaloop
  ph_ee_connector_mojaloop:
    image: mojaloop-connector:gazelle
    imagePullPolicy: "Never"
    ingress:
      enabled: true
      className: nginx
    switch:
      quotes:
        host: ""
        service: ""
      als:
        host: "fspiop.mifos.gazelle.test"
        service: "fspiop.mifos.gazelle.test"
      transfers:
        host: "fspiop.mifos.gazelle.test"
        service: ""
      transactions:
        host: "fspiop.mifos.gazelle.test"
        service: ""
      oracle:
        host: "fspiop.mifos.gazelle.test"
    deployment:
      extraEnvs:
        - name: parties_0_domain
          value: "https://fynams.fred.io/"
        - name: parties_1_domain
          value: "mojaloop.fred.io"
        - name: parties_2_domain
          value: "mojaloop.fred.io"
        - name: parties_3_domain
          value: "mojaloop.fred.io"
        - name: parties_0_tenantId
          value: "greenbank"
        - name: parties_1_tenantId
          value: "bluebank"
        - name: parties_2_tenantId
          value: "FREDpluto"
        - name: parties_3_tenantId
          value: "FREDvenus"
        - name: parties_0_fspId
          value: "FREDpayerfsp"
        - name: parties_1_fspId
          value: "FREDpayeefsp"
        - name: parties_2_fspId
          value: "FREDpayeefsp2"
        - name: parties_3_fspId
          value: "FREDpayeefsp3"        

  ph_ee_connector_ams_mifos:
    ams_local_enabled: true
    ams_local_interop_host: "fineract-server"
    ams_local_account_host: "fineract-server"
    ams_local_customer_host: "fineract-server"
    ams_local_auth_host: "fineract-server"
    ingress:
      enabled: true
      className: nginx


  # Mockpayment
  mockpayment:
    hostname: "mockpayment.mifos.gazelle.test"
    ingress:
      enabled: true
      className: nginx
      annotations:
        kubernetes.io/ingress.class: nginx
      tls:
        - secretName: sandbox-secret
      hosts:
        - host: mockpayment.mifos.gazelle.test
          paths:
            - path: "/"
              backend:
                service:
                  name: ph-ee-connector-mock-payment-schema
                  port:
                    number: 80
    deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"
  
  # CRM
  crm:
    ingress:
      enabled: true
      className: nginx
      annotations:
        kubernetes.io/ingress.class: nginx

  # Channel
  channel:
    ingress:
      enabled: true
      className: nginx
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

  connector_bulk:
    enabled: true
    tenants: "greenbank,bluebank"
    # deployment:
    #   annotations:
    #     rollme: "{{ randAlphaNum 5 | quote }}"
    # operations_app:
    #   contactpoint: "https://ops-bk.mifos.gazelle.test/"
    #   endpoints:
    #     batch_transaction: "/api/v1/batch/transactions"
    # identity_account_mapper:
    #   hostname: "http://ph-ee-identity-account-mapper:80"
    ingress:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/cors-allow-headers: "content-type,platform-tenantid,purpose,type,x-callback-url,x-correlationid,x-program-id,x-registering-institution-id,x-signature"
        nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
        #nginx.ingress.kubernetes.io/cors-allow-origin: '*'
        #nginx.ingress.kubernetes.io/cors-allow-origin-regex: "https?://ops\.mifos.gazelle.test:4200"
        nginx.ingress.kubernetes.io/cors-allow-origin-regex: "https://ops.mifos.gazelle.test"
        nginx.ingress.kubernetes.io/enable-cors: "true"
      tls:
        - secretName: sandbox-secret
      hosts:
        - host: bulk-connector.mifos.gazelle.test     
          paths: 
          - path: "/"
            backend:
              service:
                name: "ph-ee-connector-bulk"
                port:
                  number: 8443

  # # Connector Bulk
  # connector_bulk:
  #   ingress:
  #     enabled: true
  #     className: nginx
  #     annotations:
  #       nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

  # Bill Pay
  billPay:
    ingress:
      enabled: false
      className: nginx
      annotations:
        kubernetes.io/ingress.class: nginx

  # PH-EE Connector AMS Mifos
    ingress:
      enabled: true
      className: nginx

  # Minio
  minio:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      hosts:
        - minio.mifos.gazelle.test

  # Message Gateway
  messagegateway:
    ingress:
      enabled: true
      className: nginx

  post_installation_job:
    enabled: false

  integration_test:
    enableAMSTest: false
    enableGOVTest: false
    enableGazelleTest: true 
    imagePullPolicy: IfNotPresent
    image: docker.io/openmf/ph-ee-integration-test:v1.6.2-gazelle
    imagePullPolicy: IfNotPresent
    testTags: "@gov and not @ext"
    memoryRequest: "500k"
    testResultsOutputDir: "/tmp"



# Account Mapper
account_mapper:
  enabled: true
  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
    # tls:
    #   - secretName: sandbox-secret
    # hosts:
    #   - host: identity-mapper.mifos.gazelle.test
    #     paths:
    #       - path: "/"
    #         backend:
    #           service:
    #             name: ph-ee-identity-account-mapper
    #             port:
    #               number: 80





  #   webModeler:
  #     enabled: true
  #     restapi:
  #       mail:
  #         smtpHost: smtp.example.com
  #         smtpPort: 587
  #         smtpUser: mifosu
  #         smtpPassword: secret
  #         # Email address to be displayed as sender of emails from Web Modeler
  #         fromAddress: no-reply@example.com
  #   postgresql:
  #     enabled: true
